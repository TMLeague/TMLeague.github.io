@inject LeagueService LeagueService
@inject ILogger<Champion> Logger

<h4>@(ChampionVm?.Title ?? "Champion")</h4>

@if (ChampionVm == null)
{
    @if (_isInitialized)
    {
        <div class="lead">The league has no champion.</div>
    }
    else
    {
        <Loading Size="10vh"></Loading>
    }
}
else
{
    <h4 class="fw-bold fst-italic winner">
        <a href="@RouteProvider.GetPlayerRoute(LeagueId, ChampionVm.PlayerName)" class="text-inherit">@ChampionVm.PlayerName</a>
    </h4>
}

@code {
    [Parameter]
    public string? LeagueId { get; set; }

    private LeagueSeasonChampionViewModel? ChampionVm { get; set; }

    private bool _isInitialized;

    protected override async Task OnInitializedAsync()
    {
        if (LeagueId != null)
            ChampionVm = await LeagueService.GetLeagueChampionVm(LeagueId);
        else
            Logger.LogError($"Parameter {nameof(LeagueId)} is required!");

        _isInitialized = true;
    }
}